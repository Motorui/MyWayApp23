// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWayApp23.Data;

#nullable disable

namespace MyWayApp23.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220603145001_ConvertNotificationToDouble")]
    partial class ConvertNotificationToDouble
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2301D884-221A-4E7D-B509-0113DCC043E1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "7D9B7113-A8F8-4035-99A7-A20DD400F6A3",
                            Name = "Utilizador",
                            NormalizedName = "UTILIZADOR"
                        },
                        new
                        {
                            Id = "78A7570F-3CE5-48BA-9461-80283ED1D94D",
                            Name = "Consultor",
                            NormalizedName = "CONSULTOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4f1e6e35-b812-44cf-827e-7a650ef8f010",
                            Email = "rui.santos@portway.pt",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "RUI.SANTOS@PORTWAY.PT",
                            NormalizedUserName = "RAPEREIRA",
                            PasswordHash = "AQAAAAIAAYagAAAAEIYTIdtkPH7HkqDYC3MqmTJPIXezY+LigAx6I18iTk2BIpQLUUphKWliJOeCQSHCUQ==",
                            PhoneNumber = "XXXXXXXXXXXXX",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "00000000-0000-0000-0000-000000000000",
                            TwoFactorEnabled = false,
                            UserName = "rapereira"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            RoleId = "2301D884-221A-4E7D-B509-0113DCC043E1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyWayApp23.Models.Assistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CkIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimaApresentacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HoraEmbarque")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrigDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SaidaStaging")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assistencias");
                });

            modelBuilder.Entity("MyWayApp23.Models.HistoricoAssistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Calcos")
                        .HasColumnType("datetime2");

                    b.Property<string>("CkIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Contacto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Equipamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Notif")
                        .HasColumnType("float");

                    b.Property<string>("OrigDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistoricoAssistencias");
                });

            modelBuilder.Entity("MyWayApp23.Models.Stand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc57d6c6-c9c6-4701-994f-32b65f557d77"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "104",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("a6e5b5a6-e8c8-429f-9b45-f72c090b7931"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "105",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("68ab0a56-b198-47c2-aea6-84f531db6340"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "106",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("21107b58-a51b-4be6-8856-a0f98fcf17b9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "107",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("c3ec6eaf-d638-4b2b-bdcc-74d6f9702ee1"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "108",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("cd3a48f7-7ce5-44c1-b54c-58f101ffd779"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "114",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("616c06d3-3d9a-43c4-b06c-290f785cea34"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "115",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("a68066ef-573e-413b-81f9-a7f1793dfd6d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "116",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("59677d90-4ba1-4646-8567-c8c679767a98"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "117",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("148456eb-a783-446a-9c39-ea01405ec131"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "118",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("a8c1770b-3586-4e89-b41f-259bb38cb088"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "119",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("b4d77991-8eb1-4a0d-b8b9-ba60884f3ce1"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "120",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("e7590ebf-6eb7-4c96-b4ee-bd3068c3774b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "121",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("d1dba445-c5e4-44d7-9f93-37bf1d11a0af"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "122",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("81d9ebc8-2994-4232-832b-22cc7be47620"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "123",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("84562b85-7c91-41d8-9193-dea94f1987c9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "124",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("9272668a-627c-442c-a79d-4dc65d2367af"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "125",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("135be937-3f1e-4016-a317-6465a855590f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "126",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("da517547-a0fe-421d-a21c-037177dc7e30"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "127",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("106c5f39-eb64-478c-9f46-16938c7c876d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "140",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("035b7167-10ca-402f-9316-6bb484273c97"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "141",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("9081f4c3-a0dc-41d2-9f3a-5107dd9d3132"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "142",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("c9467a53-96e9-424e-bb6c-673c4314be88"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "143",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("a62caa97-3453-41e9-a425-a604a6ec1add"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "144",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("a300f7cb-b342-459f-9cd2-f34bea957f78"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "145",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("5dd1907d-dd58-4e8c-99ee-71612ba65530"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "146",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("0074f568-fe89-476e-b001-ba1397e6339a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "147",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("61cd542e-0163-4795-87c9-986876797d04"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "200",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("043de7f9-b33a-4e31-8e21-7845eecf2461"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "201",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("66f9a9e8-2b13-41da-b3f9-d8eec659ae10"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "202",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c74c3809-510c-4084-beae-9b2f36f93dc7"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "203",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("0b9e4cfb-2672-45b2-8f6c-48f93b212f30"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "204",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("46983165-7bc5-4046-9fc6-ea0fbbde7940"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "205",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("09e4bbe2-c3d3-4c59-90c3-a2ac8884e7ba"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "206",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("a77cc5cb-5d7a-4d09-9756-8359eb22ab28"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "207",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("a9e2cf59-7fbd-410d-8285-c30488c5a93e"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "208",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("079234f6-8965-4aac-85ce-786c09816a27"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "209",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("bf00883c-e1af-4444-834d-9c39d2d80a79"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "221",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("cbb2cb52-50c1-41bd-b79c-f48c187a31c5"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "222",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c2f2e829-9e04-44ea-9ed4-aadae81fbcf6"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "223",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("4daadf02-5dcc-4019-ba6a-f3837b165bdb"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "224",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("1fea6a01-47af-4efe-9808-0a7c8d988fa9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "225",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("5be6c4b6-b0b4-481a-82b6-901d5e0d5b34"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "301",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("3247bd39-832c-4c5f-9e18-6d3209a8f16a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "302",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("94b8782e-f643-4c72-8669-d98d2587c2d2"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "401",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("fd359cd8-ebb0-4e79-b631-e0442006799f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "402",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("968b657b-1e89-45cb-9d5a-d046e9f16c56"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "403",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("3751edbd-7125-479c-9e88-f485ef1c168c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "404",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e469e091-4e7e-47b0-8b5f-674fdc2b386a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "405",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("7b9ba5da-39fc-4fbb-baf4-cdcfcb457e79"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "411",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e0ea46e1-a58f-4469-944d-b8070d567fbf"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "412",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("a7d64966-fa3c-41e6-a450-b52ff8e646b8"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "413",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("4ed01ef6-1f6a-4766-9da6-28bc8d9523ad"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "414",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("de51acc7-561d-462d-9074-1ac40c15ca3c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "415",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("186e838b-4c5f-4ead-81da-d9205af4af33"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "416",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c5dbc292-cc67-4702-8bf6-c45fa28d235b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "421",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("8d87a8b6-214e-41a3-bfc7-b58c671e4d11"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "422",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("942ee730-6303-4c51-bd0f-08fbd35296ef"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "423",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e3b2bfcf-4d11-4754-98c0-04dd4d591012"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "424",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e81dc18c-89ed-42a0-bedd-673aa1acb4e7"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "425",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c2dcf0bc-c411-4242-b7c6-7a714627fd8a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "426",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("edd47116-a9a7-4114-b9eb-7011d5861b87"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "500",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("adf4fcec-975f-4287-80c9-ed54da7d11e6"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "501",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("26ca285c-3dcb-4f40-ade0-457b341e1892"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "502",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("fe2333ab-84df-4831-9936-a28eb1bc7671"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "503",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("803d3f5e-5af1-42b6-83f0-fa63e28c5ac5"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "504",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("a8eaad47-bf5f-446c-8c47-4d249bc106f8"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "505",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("7071722b-c09e-4897-8c88-4b8d3e846091"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "506",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("1038b233-2037-47dc-9f4b-d208bdb95d24"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "600",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("af8f635d-8105-4a41-a59d-f4df0fb92c2b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "601",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("d090f51a-ca5d-452b-863f-ce10973760e6"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "603",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("7cdb3ed1-7f10-41d3-a9ce-b0b3e7df033d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "604",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e392b210-608e-4a4b-a350-dfeb4ce75d99"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "605",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("5a997e07-4f11-430d-9c0a-cd9594c9d950"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "606",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b29861d4-fb05-41f3-9a28-c0ba82ffe724"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "607",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("8f790c0b-d28e-4ff0-9b35-b0fbfa357550"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "608",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("5305355c-fc00-4be8-b2fa-fef903b3db69"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "609",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("bd92605f-ab23-4cf9-9e43-582896a22952"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "701",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("8ca8b59e-1621-4e26-8d4d-e2d39ba7f8da"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "702",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("09cf9b7f-6721-4204-abc9-2ba9de8d3545"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "703",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("3da1be89-b345-4e50-974e-1a5035434fcf"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "704",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("72fba57d-df67-4f39-9287-6fe5f6aaf56f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "705",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("9a693e8b-0ab5-4751-a5bf-a6fd646363e0"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "706",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("bc98fd0d-45c5-4736-91f8-644a5fa4af09"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "801",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("9e93d7a9-c8e8-4a99-8c5c-b14fa701a0be"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "802",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("f33ce197-ae2d-4c6c-b6e2-6c19b1ea2b5b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "803",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("61110a53-1156-404c-8a3e-230a0531fe80"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "804",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b27a27c4-3caf-4640-9fcd-d5dfde8ddd03"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "805",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("1db07097-b168-4e0b-9b5d-54ecafa7941c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "806",
                            Tipo = "REMOTE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
