@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorage
@*<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
*@

<MudLayout>
    <MudAppBar Elevation="5">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit"
                       Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">MyWay 2023</MudText>
        <MudSpacer />
        <MudIconButton Icon="@_themeIcon" Color="@Color.Default" OnClick="ChangeThemeAsync" />
        @* @if (_isDarkMode == true)
        {
        <MudIcon Icon="@Icons.Rounded.DarkMode" Color="Color.Error" />
        }
        else
        {
        <MudIcon Icon="@Icons.Rounded.WbSunny" Color="Color.Warning" />
        }
        <MudSwitch @bind-Checked="@_isDarkMode" Color="Color.Error"
        UnCheckedColor="Color.Warning" Class="ma-2" T="bool" />*@

        <MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Edge="Edge.End">
            <AuthorizeView>
                <Authorized>
                    <MudMenuItem>
                        <MudNavLink Href="/Identity/Account/Logout">Logout</MudNavLink>
                    </MudMenuItem>
                </Authorized>
                <NotAuthorized>
                    <MudMenuItem>
                        <MudNavLink Href="/Identity/Account/Login">Login</MudNavLink>
                    </MudMenuItem>
                </NotAuthorized>
            </AuthorizeView>
        </MudMenu>

    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer Fixed="true" Class="p-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@*<MudThemeProvider Theme="@_currentTheme" />*@
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    private string _themeName = "light";
    private MudTheme _theme = new();
    private bool _isDarkMode;
    private string _themeIcon = MudBlazor.Icons.Rounded.WbSunny;

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (await LocalStorage.ContainKeyAsync("theme"))
                _themeName = await LocalStorage.GetItemAsStringAsync("theme");
            else
                _themeName = "light";

            //_currentTheme = _themeName == "light" ? _lightTheme : _darkTheme;
            _isDarkMode = _themeName == "light" ? false : true;
            _themeIcon = _themeName == "light" ? MudBlazor.Icons.Rounded.DarkMode : MudBlazor.Icons.Rounded.WbSunny;
            StateHasChanged();
        }
    }

    //MudTheme? _currentTheme = null;

    //private MudTheme _darkTheme = new MudTheme
    //    {
    //        Palette = new Palette()
    //        {
    //            AppbarBackground = "#99C93B",
    //            AppbarText = "#FFFFFF",
    //            Primary = "#5A30FC",
    //            Secondary = "#9E70D0",
    //            TextPrimary = "#FFFFFF",
    //            Background = "#456345",
    //            TextSecondary = "#E2EEF7",
    //            DrawerBackground = "#99C93B",
    //            DrawerText = "#FFFFFF",
    //            Surface = "#99C93B",
    //            ActionDefault = "#093958",
    //            ActionDisabled = "#2F678C",
    //            TextDisabled = "#B0B0B0"
    //        }
    //    };

    //private MudTheme _lightTheme = new MudTheme
    //    {
    //        Palette = new Palette()
    //        {
    //            AppbarBackground = "#093958",
    //            AppbarText = "#000000",
    //            Primary = "#195FDA",
    //            TextPrimary = "#FFFFFF",
    //            Background = "#E1E1E1",
    //            TextSecondary = "#E2EEF7",
    //            DrawerBackground = "#E1E1E1",
    //            DrawerText = "#000000",
    //            Surface = "#093958",
    //            ActionDefault = "#093958",
    //            ActionDisabled = "#2F678C",
    //            TextDisabled = "#B0B0B0"
    //        }
    //    };

    private async Task ChangeThemeAsync()
    {
        if (_themeName == "light")
        {
            //_currentTheme = _darkTheme;
            _isDarkMode = true;
            _themeName = "dark";
            _themeIcon = MudBlazor.Icons.Rounded.WbSunny;
        }
        else
        {
            //_currentTheme = _lightTheme;
            _isDarkMode = false;
            _themeName = "light";
            _themeIcon = MudBlazor.Icons.Rounded.DarkMode;
        }
        await LocalStorage.SetItemAsStringAsync("theme", _themeName);
    }
}
