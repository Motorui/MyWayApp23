@page "/uploadexcel"

<PageTitle>Upload Excel</PageTitle>

@inject ISnackbar Snackbar
@inject IReadExcelService readService
@inject IDataTableConverter converter
@inject IAssistenciaService assistenciaService
@inject IHistoricoService historicoService

<AuthorizeView>
    <Authorized>

        <MudGrid>
            <MudItem xs="12" sm="12" lg="12" md="12" xl="12" xxl="12">
                <MudBreadcrumbs Items="_breads"></MudBreadcrumbs>
            </MudItem>
            <MudItem xs="12" sm="12" lg="12" md="12" xl="12" xxl="12">
                <InputFile id="fileInput112" OnChange="UploadFiles" hidden accept=".xls, .xlsx" />

                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Dark"
                           StartIcon="@Icons.Filled.UploadFile"
                           for="fileInput112">
                    Upload ficheiros de assistências
                </MudButton>

            </MudItem>
            <MudItem xs="12" sm="12" lg="12" md="12" xl="12" xxl="12">
                @if (Value > 0)
                {
                    <MudProgressLinear Color="Color.Success" Value="@Value" Size="Size.Large" Class="my-5">
                        <MudText Typo="Typo.h1" Color="Color.Default">
                            <b>@((int)Value)%</b>
                        </MudText>
                    </MudProgressLinear>
                    <MudText>@ProgressMessage</MudText>
                }

            </MudItem>
        </MudGrid>


    </Authorized>
    <NotAuthorized>
        <_403 />
    </NotAuthorized>
</AuthorizeView>


@code {
    public double Value { get; set; } = 0;
    public string? ProgressMessage { get; set; } = string.Empty;

    private List<BreadcrumbItem> _breads = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "#"),
        new BreadcrumbItem("Upload", href: null, disabled: true)
    };

    private async void UploadFiles(InputFileChangeEventArgs e)
    {
        var excelFile = e.File;

        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;

        var dt = await readService.ReadExcelAsync(excelFile);

        Value = 0;
        int row = 0;
        int atualiza = 0;
        int cria = 0;
        if (converter.ReturnFileType(dt) == "assistencias")
        {
            var assistencias = converter.ConvertDataTableToAssistencias(dt);

            foreach (var assistencia in assistencias)
            {
                row++;
                int total = assistencias.Count;
                Value = (row / (double)assistencias.Count) * 100;

                if (await assistenciaService.ExistsAsync(assistencia) != null)
                {
                    atualiza++;
                }
                else
                {
                    cria++;
                }
                ProgressMessage = $"Foram inseridos {cria} e atualizados {atualiza} registos, de um total de {total} registos";

                StateHasChanged();
                await Task.Delay(100);

                await assistenciaService.CreateOrUpdateAsync(assistencia);
            }

        }
        else if (converter.ReturnFileType(dt) == "historico")
        {
            var historicos = converter.ConvertDataTableToHistorico(dt);

            foreach (var historico in historicos)
            {
                row++;
                int total = historicos.Count;
                Value = (row / (double)historicos.Count) * 100;

                if (await historicoService.ExistsAsync(historico) != null)
                {
                    atualiza++;
                }
                else
                {
                    cria++;
                }
                ProgressMessage = $"Foram inseridos {cria} e atualizados {atualiza} registos, de um total de {total} registos";

                StateHasChanged();
                await Task.Delay(100);

                await historicoService.CreateOrUpdateAsync(historico);
            }
        }
        else
        {
            Snackbar.Add($"Ficheiro errado!!!", Severity.Error);
        }
    }

    }
