@page "/"
@using MyWayApp23.Components.Charts

@inject IHistoricoService service
@inject IChartService chartService

<PageTitle>Index</PageTitle>

@*<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />*@

<AuthorizeView>
    <Authorized>
        @*<p>Olá, @context.User.Identity!.Name</p>*@
        @if (historico != null)
        {
            <MudOverlay Visible="isVisible" DarkBackground="true" ZIndex="9999" AutoClose="false">

                <MudText Typo="Typo.h5" Color="Color.Primary"
                     Class="d-flex align-center justify-center mud-width-full">
                    A Carregar dados...
                </MudText>
                <MudProgressLinear Color="Color.Secondary" Indeterminate="true" Class="my-2" />

            </MudOverlay>
        }
        
        @if(historico != null)
        {
            <MudGrid>
                  <MudItem xs="12" xxl="12">
                <MudBreadcrumbs Items="_breads"></MudBreadcrumbs>
            </MudItem>

            <MudItem xs="12" xxl="12">
                <MudText Typo="Typo.h6">
                    Médias por mês.
                </MudText>
            </MudItem>

            <MudItem xs="12" xxl="12" Class="d-flex align-content-start flex-wrap flex-grow-1 gap-4">
                <MudItem xs="2">
                    <MudSelect T="int" Label="Ano" Variant="Variant.Outlined" @bind-Value="_year">
                        @foreach (var year in last5Years!)
                        {
                            <MudSelectItem Value="@year.Year" />
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="2">
                    <MudButton ButtonType="ButtonType.Button" StartIcon="@Icons.Material.Filled.Search"
                               OnClick="OnYearChange" Class="align-self-end py-4 flex-1">Filtrar</MudButton>
                </MudItem>
            </MudItem>
                <MudItem xs="12">
                    <MudPaper Class="pa-5" Elevation="5">
                        <PaxDemandChart PaxDemandConfig="PaxDemandConfig"></PaxDemandChart>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12">
                    <MudPaper Class="pa-5" Elevation="5">
                        <DemandByShiftChart DemandsByShiftChartConfig="DemandsByShiftChartConfig"></DemandByShiftChart>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        }
    </Authorized>
    <NotAuthorized>
        <p>Não sei o teu username sem te logares!</p>
    </NotAuthorized>
</AuthorizeView>
@code {
    private List<BreadcrumbItem> _breads = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Início",null, disabled: true),
    };
    private bool isVisible = true;
    IEnumerable<DateTime>? last5Years;
    private int _year = DateTime.Today.Year;

    [CascadingParameter]
    public Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    private List<HistoricoAssistencia> historico { get; set; } = new();
    public LineChartConfig PaxDemandConfig { get; set; } = new();
    public LineChartConfig DemandsByShiftChartConfig { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        last5Years = from n in Enumerable.Range(0, 5)
                     select DateTime.UtcNow.AddYears(-n);

        await Task.Delay(5);
        GetData();
    }

    private void OnYearChange()
    {
        isVisible = true;
        Task.Delay(15);
        GetData();
    }

    private async void GetData()
    {
        if (_year > 0)
        {
            historico = await service.GetByYearAsync(_year);
            PaxDemandConfig = chartService.GetPaxDemandData(historico);
            DemandsByShiftChartConfig = chartService.GetDemandByShiftData(historico);
        }
        isVisible = false;
        StateHasChanged();
    }
}