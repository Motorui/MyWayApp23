// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWayApp23.Data;

#nullable disable

namespace MyWayApp23.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2301D884-221A-4E7D-B509-0113DCC043E1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "7D9B7113-A8F8-4035-99A7-A20DD400F6A3",
                            Name = "Utilizador",
                            NormalizedName = "UTILIZADOR"
                        },
                        new
                        {
                            Id = "78A7570F-3CE5-48BA-9461-80283ED1D94D",
                            Name = "Consultor",
                            NormalizedName = "CONSULTOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2f546024-e6d1-4302-8697-ba176c5687f5",
                            Email = "rui.santos@portway.pt",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "RUI.SANTOS@PORTWAY.PT",
                            NormalizedUserName = "RAPEREIRA",
                            PasswordHash = "AQAAAAIAAYagAAAAEN8fhVHG0B5EDnheV/iAhAxHI+vQpXnEi09MYUgdQAuekw02NIi3NjIaWW6RhYljBg==",
                            PhoneNumber = "XXXXXXXXXXXXX",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "00000000-0000-0000-0000-000000000000",
                            TwoFactorEnabled = false,
                            UserName = "rapereira"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            RoleId = "2301D884-221A-4E7D-B509-0113DCC043E1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyWayApp23.Models.Assistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CkIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimaApresentacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HoraEmbarque")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrigDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SaidaStaging")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assistencias");
                });

            modelBuilder.Entity("MyWayApp23.Models.Historico.HistoricoAssistencia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Calcos")
                        .HasColumnType("datetime2");

                    b.Property<string>("CkIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Contacto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<long>("Duracao")
                        .HasColumnType("bigint");

                    b.Property<string>("Equipamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Notif")
                        .HasColumnType("bigint");

                    b.Property<string>("OrigDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistoricoAssistencias");
                });

            modelBuilder.Entity("MyWayApp23.Models.Stand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eccabd8a-7d52-43cc-a465-efb22dc9bcd9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "104",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("7e524414-8fe6-49e9-a1ec-9d9c21762c26"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "105",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("8538c153-2143-46ec-9736-3fcb7db359af"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "106",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("dbce99a8-8975-4d9d-86c0-3bfe9a419b48"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "107",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("5fbd73ea-6523-4540-8918-49c00e527ccb"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "108",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("ef4e202f-85f9-47a8-a130-a21bf2f0b90c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "114",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("bd20a470-1361-44cb-94e2-aafacc2ddc1a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "115",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("e41fadd5-b3a9-44ee-b61d-8cbe5b22e7a9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "116",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("9210915d-62f4-4b68-a899-3c44f84f1539"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "117",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("1164cf25-b7dc-4a9a-baae-850f0292076d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "118",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("7d4e68d9-b9e6-4bc2-8264-159da450341c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "119",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("bab04a35-0b04-4a1b-b954-3f579be3c028"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "120",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("6b0642be-3580-47f2-a80a-20479de9cea2"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "121",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("4c038a88-323c-4579-8727-ac64d09fe98d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "122",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("65e1ed7f-4ee6-42fa-a14f-562d6b4e07df"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "123",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("ff8cf653-8767-4cd3-a710-26345f360a44"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "124",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("e1814a73-ddfd-4448-b5da-75378a0124d9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "125",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("7b666508-4fb0-4c72-b708-82261eb83dca"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "126",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("ad02ec72-4816-4aa9-96f5-a805b3930e02"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "127",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("b4638b90-2911-41e0-9488-0290c271ba2c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "140",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("d64c9843-8980-4df8-94bd-b1f658019573"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "141",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("88e55366-020c-4f2f-9afa-daa9a4a6428a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "142",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("db44f244-757f-4a26-a057-f4e31c2c16ad"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "143",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("05296417-dda6-4a8d-bfa9-f3b8e6f227df"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "144",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("3d7eb0fd-cc69-4d01-919f-b20b0321088f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "145",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("b03f120b-625b-4862-9f4f-a4712dc26d4e"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "146",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("ea462a3a-daec-471e-a859-66a332d4eb49"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "147",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("43e0bcbb-36b2-4ae1-887a-170238d4d69c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "200",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("79546923-49ed-4e06-9e52-c8ef10515d72"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "201",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("bc0a3c2a-fc59-4a47-8e24-c025b2fd1d60"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "202",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("50c7a6a1-b791-443d-9579-ea7e42c30d0d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "203",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c2273d52-fc7d-4cad-8cd7-8c5a93526f56"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "204",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("5c76aeee-1a9b-45f3-b240-c07f30cfd183"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "205",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("68e65516-bc78-45cc-946a-c57711cc7481"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "206",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b2b0d27d-772b-4f43-9c9e-46bde56f3803"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "207",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("838c0563-321a-474c-860d-fcee68c5afa5"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "208",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("ac94eb2c-ad87-466f-ab06-f5401dbd5cb3"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "209",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("2818b85c-16fa-43aa-9f28-1b7359e38f7d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "221",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c9d1707a-c9a1-4b50-b7ad-2ac1c7212dc3"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "222",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("516e14c7-6733-4228-8287-5cf93272364b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "223",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("19ca39a2-936b-4ac8-a2d7-ea01dedcf929"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "224",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("be098440-c479-4dca-86ee-67010d873a67"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "225",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("423d7c64-4437-4da5-8dbe-447755411bb2"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "301",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("7431e3af-783c-4dc4-93cb-8c363eed4f48"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "302",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("f5031bcc-a090-4adc-9804-52521934be50"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "401",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("f23e868d-0234-41b3-bd9f-664a17133e63"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "402",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("40fef9be-caa7-443c-8fb8-c2d574af9509"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "403",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("f3f3d435-dcee-4b5e-a75a-e1c1738b867e"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "404",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("0b8f5d48-a641-4aff-927f-80842936a31f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "405",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e2bc8952-830e-4698-8173-7b9d06caa91f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "411",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("ed72fb17-c36a-469a-8bb5-76150e5ced72"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "412",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("d6a14acf-13db-4863-8dff-7e17e42729f5"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "413",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("13da7ddc-9211-4533-828d-d5ad1910bc00"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "414",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e56a42ac-04cb-4571-a1fc-5dd03b07fdb7"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "415",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e21a33e4-479c-4962-95e2-8d11b5113d09"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "416",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("0efa2638-e7ed-4af9-bbb6-e11dba1f69b3"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "421",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("2db61a58-a253-4882-9e2c-8bc73bf3a24f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "422",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("08631682-9535-424c-bd29-9bf28b689694"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "423",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("cdc576d1-3b95-4887-a348-11dd5b9a95fd"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "424",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("7bff4137-a4ed-4c80-ace6-c040bf9c8267"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "425",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("4626709b-ec1d-4269-93e7-035281dc3ff5"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "426",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("d724cb8c-1a6e-4037-9a51-ecce8e2c7ffe"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "500",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("182cb744-0177-45d7-abdc-294d09eba5bb"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "501",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("cd74fb3a-e79e-4f38-a197-d91f011d1ed4"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "502",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("145f811c-63e1-492c-a0c5-69608bec0595"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "503",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("d8daa433-31e3-4130-869f-45b21e495138"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "504",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("1ec787fc-1cfc-40f1-a755-f4278bbed9ec"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "505",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c89fc436-dcd5-452d-9cb3-b4f1f0d3413c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "506",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("1e7435dc-19ff-4008-9137-3e174806ea06"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "600",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("15608536-b40a-487f-aa39-1d8827d38c66"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "601",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("1d234287-6edb-4b71-8c55-2182248768e0"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "603",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("77ac0155-cc40-47f0-b011-3df3673e1d53"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "604",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("171ae922-3bdb-49f0-a0aa-c3627022b3f4"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "605",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("6085252c-2f91-4dfd-a15b-dbd1c90fcdcc"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "606",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("589f2cd7-c73e-400a-80e8-a0760bfbf204"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "607",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("49010979-47f3-443b-9986-0f79d514e640"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "608",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("740a269f-6a6d-4269-8162-5351c43385d8"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "609",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("a412eda4-87a0-4f27-8025-71a9fa705fd6"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "701",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("ef3489eb-6f0b-4fa3-b0e0-92225290d9aa"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "702",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("8cabe186-7a7a-470d-940b-c4a52a715698"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "703",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b69f91b0-bb06-40c2-83fe-b6bd6c022954"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "704",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("4d066c34-df7b-4bc3-a3be-e23282c90406"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "705",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("f8a36fe5-fcb0-4975-ae62-c02314116b55"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "706",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("85c5ad4a-202a-4f34-9bd2-aeffc9e79bb4"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "801",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("9f14c722-44f0-4c74-a47b-434960a73040"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "802",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e581751a-e004-4fbd-a63e-b30aae9b5732"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "803",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("07047f82-f78e-4f2b-9bef-727fb0b8562b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "804",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("a25c84ce-058f-48ba-865e-513a22362665"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "805",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("475fa77c-031d-4a47-baf3-b9fab14e9844"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "806",
                            Tipo = "REMOTE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
