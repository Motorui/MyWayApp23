@page "/medias"

@using MyWayApp23.Components
@inject IHistoricoAverageService HistoricoAverageService

<PageTitle>Médias</PageTitle>

<AuthorizeView Context="AuthContext">
    <Authorized>
        <MudItem xs="12">
            <MudBreadcrumbs Items="_breads"></MudBreadcrumbs>
        </MudItem>
        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h3">
                    Médias por mês e dia da semana.
                </MudText>
            </MudItem>
            <MudItem xs="2">
                <MudDatePicker Label="Selecionar ano" @bind-Date="@SelectedDate" OpenTo="OpenTo.Year"
                               FixMonth="1" FixDay="1" DateFormat="yyyy" AutoClose="true" />
            </MudItem>
            <MudItem xs="2"></MudItem>
            <MudItem xs="2"></MudItem>
            <MudItem xs="2"></MudItem>
            <MudItem xs="2"></MudItem>
            <MudItem xs="2"></MudItem>
            <MudItem xs="4">
                <YearMonthAverageTableComponent Items="@averageTotal"
                                                IsVisible="@isVisible"
                                                HeaderText="Média total" />
            </MudItem>
            <MudItem xs="4">
                <YearMonthAverageTableComponent Items="@averageDep"
                                                IsVisible="@isVisible"
                                                HeaderText="Média de partidas" />
            </MudItem>
            <MudItem xs="4">
                <YearMonthAverageTableComponent Items="@averageArr"
                                                IsVisible="@isVisible"
                                                HeaderText="Média de chegadas" />
            </MudItem>
            <MudItem xs="4">
                <YearMonthAverageTableComponent Items="@averageJet"
                                                IsVisible="@isVisible"
                                                HeaderText="Média em JetBridge" />
            </MudItem>
            <MudItem xs="4">
                <YearMonthAverageTableComponent Items="@averageRemote"
                                                IsVisible="@isVisible"
                                                HeaderText="Média em Remoto" />
            </MudItem>
            <MudItem xs="4">
                <YearMonthAverageTimeTableComponent Items="@averageTime"
                                                IsVisible="@isVisible"
                                                HeaderText="Média de duração" />
            </MudItem>
        </MudGrid>

    </Authorized>
    <NotAuthorized>
        <_403 />
    </NotAuthorized>
</AuthorizeView>


@code {

    private List<BreadcrumbItem> _breads = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Início", href: "#"),
        new BreadcrumbItem("Médias", null, disabled: true)
    };

    private bool isVisible = true;

    public DateTime? _date = DateTime.Today;
    private DateTime? SelectedDate
    {
        get => _date;
        set
        {
            _date = value;
            DateChanged();
        }
    }

    private List<HistoricoAverage> averageTotal = new List<HistoricoAverage>();
    private List<HistoricoAverage> averageDep = new List<HistoricoAverage>();
    private List<HistoricoAverage> averageArr = new List<HistoricoAverage>();
    private List<HistoricoAverage> averageJet = new List<HistoricoAverage>();
    private List<HistoricoAverage> averageRemote = new List<HistoricoAverage>();
    private List<HistoricoAverageTime> averageTime = new List<HistoricoAverageTime>();
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(5);
        GetData();
    }

    private void DateChanged()
    {
        isVisible = true;
        Task.Delay(15);
        GetData();
    }

    private void GetData()
    {
        if (_date != null)
        {
            averageTotal = HistoricoAverageService.GetAvgTotal((DateTime)_date);
            averageDep = HistoricoAverageService.GetAvgArrDep((DateTime)_date, "D");
            averageArr = HistoricoAverageService.GetAvgArrDep((DateTime)_date, "A");
            averageJet = HistoricoAverageService.GetAvgRemJet((DateTime)_date, "JETBRIDGE");
            averageRemote = HistoricoAverageService.GetAvgRemJet((DateTime)_date, "REMOTE");
            averageTime = HistoricoAverageService.GetAvgTime((DateTime)_date);
        }
        isVisible = false;
    }
} 