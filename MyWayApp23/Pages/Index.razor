@page "/"
@using MyWayApp23.Components.Charts

@inject IHistoricoService service

<PageTitle>Index</PageTitle>

@*<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />*@

<AuthorizeView>
    <Authorized>
        @*<p>Olá, @context.User.Identity!.Name</p>*@
        <MudGrid>
            <MudItem xs="12">
                <MudPaper Class="pa-5" Elevation="5">
                    @if (historico != null)
                    {
                        <PaxDemandChart @ref="paxDemandChart"></PaxDemandChart>
                    }
                </MudPaper>
            </MudItem>
            <MudItem xs="12">
                <MudPaper Class="pa-5" Elevation="5">
                    @if (historico != null)
                    {
                        <DemandByShiftChart @ref="demandByShiftChart"></DemandByShiftChart>
                    }
                </MudPaper>
            </MudItem>
        </MudGrid>
    </Authorized>
    <NotAuthorized>
        <p>Não sei o teu username sem te logares!</p>
    </NotAuthorized>
</AuthorizeView>
@code {
    [CascadingParameter]
    public Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    private PaxDemandChart? paxDemandChart;
    private DemandByShiftChart? demandByShiftChart;

    private List<HistoricoAssistencia> historico { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {
        historico = await service.GetByYearAsync(DateTime.Today.Year);

        var paxDemandChartData = historico.GroupBy(x => new { Dia = x.Data.Date })
            .Select(x => new
            {
                labels = x.Key.Dia.ToString("d/MMM"),
                real = x.Count(),
                dep = x.Count(m => m.Mov == "D"),
                arr = x.Count(m => m.Mov == "A")
            }).ToList();

        List<string> labels = paxDemandChartData.Select(m => m.labels).ToList();
        List<decimal> real = paxDemandChartData.Select(m => (decimal)m.real).ToList();
        List<decimal> dep = paxDemandChartData.Select(m => (decimal)m.dep).ToList();
        List<decimal> arr = paxDemandChartData.Select(m => (decimal)m.arr).ToList();

        paxDemandChart!.FillData(labels, real, dep, arr);
        demandByShiftChart!.OnInit(historico);
    }

}