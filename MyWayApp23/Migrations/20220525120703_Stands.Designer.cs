// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWayApp23.Data;

#nullable disable

namespace MyWayApp23.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220525120703_Stands")]
    partial class Stands
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2301D884-221A-4E7D-B509-0113DCC043E1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "7D9B7113-A8F8-4035-99A7-A20DD400F6A3",
                            Name = "Utilizador",
                            NormalizedName = "UTILIZADOR"
                        },
                        new
                        {
                            Id = "78A7570F-3CE5-48BA-9461-80283ED1D94D",
                            Name = "Consultor",
                            NormalizedName = "CONSULTOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "70dcae22-9ccc-45bf-9807-86e3fbe1db22",
                            Email = "rui.santos@portway.pt",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "RUI.SANTOS@PORTWAY.PT",
                            NormalizedUserName = "RAPEREIRA",
                            PasswordHash = "AQAAAAIAAYagAAAAEAmJCuMtFlgkYAZI8fEKCvrHJVH/Vim38W5pqN8DxdHUIs0uM1IOjyH9Qa6UGkQp6A==",
                            PhoneNumber = "XXXXXXXXXXXXX",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "00000000-0000-0000-0000-000000000000",
                            TwoFactorEnabled = false,
                            UserName = "rapereira"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "B22698B8-42A2-4115-9631-1C2D1E2AC5F7",
                            RoleId = "2301D884-221A-4E7D-B509-0113DCC043E1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyWayApp23.Models.Assistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CkIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimaApresentacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HoraEmbarque")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrigDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SaidaStaging")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assistencias");
                });

            modelBuilder.Entity("MyWayApp23.Models.HistoricoAssistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Calcos")
                        .HasColumnType("datetime2");

                    b.Property<string>("CkIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Contacto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Equipamentos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justificacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrigDest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Voo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistoricoAssistencias");
                });

            modelBuilder.Entity("MyWayApp23.Models.Stand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aeroporto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58b24048-bf94-43de-a7fb-2a67220442ac"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "104",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("cb3fca0b-ff7d-4fde-8150-63328fab5519"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "105",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("d3d483c2-7df1-49a3-8160-2345465545f8"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "106",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("dfe6ca26-4258-4747-bced-20000e5c9f14"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "107",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("7065bf9b-96ad-478c-86e1-40ff659a871c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "108",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("4aa0b93d-e191-4e18-8825-9b278d4517b9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "114",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("ed7bb2b6-79ee-4d90-8f31-c9119e5d4ebb"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "115",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("f8813662-e93a-49af-8558-8481ac4a2855"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "116",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("bee45983-ee7a-4c9f-a8aa-8d082977be30"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "117",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("4e195678-a901-4a1e-b9ca-e6f5cfd94f78"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "118",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("0400f7bc-7985-4aab-88b0-4bc621e25eed"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "119",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("96ff0f4b-2e71-4fe2-8bce-e4ab7a492a56"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "120",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("1cb5467f-4764-42d9-bed5-b7adfd939192"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "121",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("40253c47-fc0b-4d27-8288-770c0be09335"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "122",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("75697e36-cfb9-44f5-bff4-bcfc485d50ed"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "123",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("b73073d5-e13e-4562-ad9f-19c4d412995c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "124",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("21794338-e7b4-47c1-94d6-23ff68f01645"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "125",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("430e3c02-9af1-4621-868b-7b6d3204ff3f"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "126",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("e1b50c3c-6b97-48ab-8abe-67bbe9d249ba"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "127",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("810bd0a4-c576-4273-bc5d-aae3841db17a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "140",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("b216ba52-cf2e-4e87-8561-c392d71ca473"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "141",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("ade4613a-b97c-49f0-b025-1596c4c053de"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "142",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("bdec30c2-46f0-4595-8b26-ebaef958ce4b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "143",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("5716d8e6-045d-4f4a-acf3-553baa9e53b4"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "144",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("6a9a5550-5ea0-4053-80d8-5d4d33b4f033"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "145",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("42ef9695-5e17-45bb-ae61-b3c20f942049"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "146",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("3effb17f-d0b7-4669-8174-73d15bc08fe5"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "147",
                            Tipo = "JETBRIDGE"
                        },
                        new
                        {
                            Id = new Guid("b29a4180-1f52-4f10-a51a-b1b20029a89c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "200",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e58a8aa0-281d-483d-8141-b35787ee2160"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "201",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("40ac4bbf-7bfc-4a83-9a1b-b04f72958e1c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "202",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("76766ecd-58c3-44bd-a3a5-b6b2596aa20d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "203",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("42bf92b1-15ba-427e-aeea-73056464bf95"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "204",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("52b4f52f-cffb-4704-8ebd-b41ef495debd"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "205",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c9a55db0-314b-40fc-9cdc-b98bfd4bcbd7"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "206",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("10727444-4e84-41f8-802c-de15610d7d7a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "207",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("2941219e-7c48-4345-b8a0-92d6e601ef1c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "208",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("6d849c3d-954b-4e69-9a59-288570a2f623"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "209",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("916fa702-1739-4016-a824-bef917797039"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "221",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("f7516fe5-b54f-4e35-8cad-69b5b6c5ecb8"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "222",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("0efe2360-57a6-48e9-8ff5-9d4a81165228"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "223",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("61bfee61-87df-4ebd-b3c2-e0d4792725a4"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "224",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("26016952-c71b-4c37-9302-19e058cf47a7"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "225",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e6ba1657-e1e8-443f-9384-2a7e58fbc2a9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "301",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("fac6c97a-f20d-40db-b36e-0d2ae4f4d8f8"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "302",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("25add1af-8bb7-4e1d-aabc-3544f4539447"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "401",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("2e6ea7f7-3c3d-4df4-b0f6-a06e13fcdff9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "402",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c44bb4fe-af72-445f-a187-b631a3a3d0af"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "403",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("3610367e-4eb8-425d-addb-82827d6e6bd6"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "404",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("70c8d872-bf55-4b8d-b778-ab97b3d8067a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "405",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("ab2c3a88-ad21-4fff-8631-45e8dadbf334"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "411",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("f6a172d6-1aa6-4886-b26e-27da02607e2a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "412",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("34f9199b-fb0c-4c19-93e8-c74d86834599"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "413",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("34c84b25-e161-424d-b2db-a8999f62517d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "414",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("5a671c0e-bf16-49cb-b344-6d193c5dae8c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "415",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("6fa22363-326d-4b56-941e-e3ed903a7a2c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "416",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("26fed09a-5819-4374-bbea-ead10599bb2b"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "421",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("52cfb923-768e-4603-b295-c852c16ca9ca"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "422",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("d6c71305-a0c1-456f-9a0e-fb9f379f538c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "423",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("6a339a67-cb96-4ff7-8364-da0fdc803aff"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "424",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("36fcf91e-b34e-44f4-aef0-69ede7e6c52c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "425",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("9310bcfb-1363-4947-b851-ff8dfec45672"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "426",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("14953810-d01a-4f57-94ab-360739d8eb46"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "500",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("10c712a7-353a-4e6e-9344-e58c86e75a9a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "501",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b62a5989-fee9-492c-97ec-529a50147d84"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "502",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b83d4117-7c1a-4aa8-af33-df1214b3360d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "503",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("94ab0fcd-ddfd-44b5-9792-1b238a416038"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "504",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c4f32ff0-61f3-4dc8-a2b1-bd61f9b3a52c"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "505",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("cd739270-72fc-424b-ae3d-f1e1cdb483e9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "506",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("044cda4e-7b5e-4942-8b3d-377c54660fa9"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "600",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("5291179c-9702-44d5-b298-2f3aa62bd782"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "601",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("61f02c03-03ec-4f0b-897b-dea84730bcea"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "603",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b641f46b-8237-4499-a9b3-d8fdfd19ec34"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "604",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("d22b39a0-c4f8-45cd-8e71-9a8fc546eca3"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "605",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("ff257c51-39f0-4bee-9885-9788c093dd11"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "606",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e21951d0-f38d-46d4-b604-924757a15a54"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "607",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("487262ca-262d-4319-ae1e-d185a8bddb5d"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "608",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("53816e76-e7f4-4a76-b2fa-bc75f191ef24"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "609",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e9503318-7b73-403f-8980-9590e0aac951"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "701",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("0c9fd0d4-f14b-437e-bfde-88085d3c7b14"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "702",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("985d8bf8-2fef-41c5-ad0b-4b2460bca857"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "703",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("dca4b848-4006-4aa0-bcbc-957e55fcadfc"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "704",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("914b142d-9e56-4b37-bbc9-2912f6e80557"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "705",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("7f76fe62-b8a0-4007-8106-6ea2e6e9228a"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "706",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("e34a48b8-724b-490e-9079-62b478f6cfd5"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "801",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("fd7c213a-6a83-40ad-bb94-66c98af33368"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "802",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("8b0fffd4-f8f6-47ac-8951-ed2ab29e50e0"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "803",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("c2413e9c-e086-497f-8302-e30db4e75495"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "804",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("2b2dc471-24bf-4010-ba3a-95a73b7fd942"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "805",
                            Tipo = "REMOTE"
                        },
                        new
                        {
                            Id = new Guid("b4308787-091d-4c1c-8f0b-08b80cea5795"),
                            Aeroporto = "Lis",
                            CreatedBy = "",
                            LastUpdatedBy = "",
                            Numero = "806",
                            Tipo = "REMOTE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
