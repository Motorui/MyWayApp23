@inject IJSRuntime JSRuntime

<div class="small-chart-container">
    <canvas id="@Id" height="400"></canvas>
</div>

@code {
    [Parameter]
    public List<HistoricoAssistencia>? ChartData { get; set; }

    [Parameter]
    public string? Id { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        long notif = TimeSpan.FromHours(36).Ticks;
        if (ChartData != null)
        {

            List<string> chartLabels = new();
            List<decimal> chartData = new();
            for (var i = 1; i < 13; i++)
            {
                string mes = DateTimeFormatInfo.CurrentInfo.GetAbbreviatedMonthName(i);
                int? total = ChartData.Count(d => d.Data.Month.Equals(i));
                int? nnotif = ChartData.Count(d => d.Data.Month.Equals(i) && d.Notif > notif);

                if (total > 0)
                {
                    chartLabels.Add(mes);
                    chartData.Add(PercentageHelper.PercentageToDecimal(nnotif, total) );
                }

            }

            await JSRuntime.InvokeVoidAsync("avgNonNotifiedChart", Id, chartLabels.ToArray(), chartData.ToArray());
        }
    }
}